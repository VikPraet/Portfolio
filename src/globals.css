@tailwind base;
@tailwind components;
@tailwind utilities;

#projects,
#about,
#contact,
#additional {
    scroll-margin-top: 120px;
}


@keyframes spin {
    from {
        --angle: 0deg;
    }

    to {
        --angle: 360deg;
    }
}

/* Optional support for the conic gradient angle */
@property --angle {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
}

.border-container {
    position: relative;
    display: inline-block;
}

/* Gradient border pseudo-element */
.border-container::before,
.border-container::after {
    content: '';
    position: absolute;
    top: -6px;
    left: -6px;
    right: -6px;
    bottom: -6px;
    background-image: conic-gradient(from var(--angle), #FF776F, #00000000, #00000000, #AC6AFF, #AC6AFF, #00000000, #00000000, #FF776F, #FF776F);
    border-radius: 10px;
    z-index: -1;
    opacity: 0;
    transition: opacity 0.4s ease, transform 0.4s ease;
    animation: spin 3s linear infinite;
}

/* Blurred glow effect (after) */
.border-container::after {
    filter: blur(35px);
    z-index: -2;
    opacity: 0;
}

/* Hover effect: make both the gradient border and the blur visible */
.border-container:hover::before,
.border-container:hover::after {
    opacity: 1;
}

/* Hover effect: translate the border and shadow */
.border-container:hover::before {
    transform: translateY(-0.5rem) scale(1.045);
}

.border-container:hover {
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
}



/* Modal initial enter state (hidden, scaled down) */
.modal-enter {
    opacity: 0;
    transform: scale(0.95);
    /* Start slightly smaller */
    transition: opacity 0.5s ease, transform 0.5s ease;
}

/* Modal enter active state (fully visible) */
.modal-enter-active {
    opacity: 1;
    transform: scale(1);
    /* End at full size */
}

/* Modal exit initial state (visible) */
.modal-exit {
    opacity: 1;
    transform: scale(1);
    /* Start fully visible */
    transition: opacity 0.5s ease, transform 0.5s ease;
}

/* Modal exit active state (fading and shrinking) */
.modal-exit-active {
    opacity: 0;
    transform: scale(0.95);
    /* Shrink and fade out */
}

/* Border wrapper - apply same scale and fade */
.modal-border-wrapper {
    position: relative;
    display: inline-block;
    opacity: 0;
    transform: scale(0.95);
    /* Start slightly smaller */
    transition: opacity 0.4s ease 0.5s, transform 0.4s ease 0.5s;
    /* Make the delay longer (0.5s) */
}

/* Border active state (scaling and fading) */
.modal-border-wrapper.modal-enter-active {
    opacity: 1;
    transform: scale(1);
    /* Full size */
}

.modal-border-wrapper.modal-exit-active {
    opacity: 0;
    transform: scale(0.95);
    /* Shrink and fade out */
    transition: opacity 0.3s ease 0s, transform 0.3s ease 0s;
    /* Fade-out earlier and faster */
}

/* Gradient border behind the modal */
.modal-border-wrapper::before,
.modal-border-wrapper::after {
    content: '';
    position: absolute;
    top: -6px;
    left: -6px;
    right: -6px;
    bottom: -6px;
    background-image: conic-gradient(from var(--angle), #FF776F, #00000000, #00000000, #00000000, #AC6AFF, #AC6AFF, #00000000, #00000000, #00000000, #FF776F, #FF776F);
    border-radius: 10px;
    z-index: -1;
    opacity: 1;
    transition: opacity 0.4s ease 0.5s, transform 0.4s ease 0.5s;
    /* Match delay for visibility */
    animation: spin 10s linear infinite;
    /* Ensure continuous spinning */
}

.modal-border-wrapper::after {
    filter: blur(35px);
    z-index: -2;
    opacity: 1;
}

/* Add a minimum height to prevent shrinking when there's no content */
.modal-content {
    min-height: 300px;
    /* Ensures the modal doesn't shrink if empty */
}



/* Spotlight effect */
@layer utilities {
    .spotlight-card {
        position: relative;
        transition: background 0.1s ease;
        overflow: hidden;
        border-radius: 10px;
        /* Add border-radius to the card */
    }

    .spotlight-card:hover {
        --active: 1;
    }

    /* Spotlight effect behind the card */
    .spotlight-card::after {
        content: "";
        position: absolute;
        inset: 0;
        border-radius: inherit;
        /* Inherit the card's border-radius */
        background: radial-gradient(circle at calc(var(--x) * 1px) calc(var(--y) * 1px),
                #ff766f1c 10vmin, transparent 40vmin);
        background-attachment: fixed;
        opacity: var(--active, 0);
        transition: opacity 0.3s ease;
        pointer-events: none;
    }

    /* Spotlight gradient for the border */
    .spotlight-card::before {
        content: "";
        position: absolute;
        inset: 0;
        border-radius: inherit;
        /* Inherit the card's border-radius */
        background: radial-gradient(circle at calc(var(--x) * 1px) calc(var(--y) * 1px),
                #ff766f79 10vmin, transparent 40vmin);
        background-attachment: fixed;
        pointer-events: none;
        mask: linear-gradient(white, white) 50% 0 / 100% 4px no-repeat,
            linear-gradient(white, white) 50% 100% / 100% 4px no-repeat,
            linear-gradient(white, white) 0 50% / 4px 100% no-repeat,
            linear-gradient(white, white) 100% 50% / 4px 100% no-repeat;
    }
}

@keyframes pulse-slow {

    0%,
    100% {
        transform: scale(0.95);
        opacity: 0.1;
    }

    50% {
        transform: scale(1.1);
        opacity: 0.45;
    }
}

.animate-pulse-slow {
    animation: pulse-slow 20s ease-in-out infinite;
}

/* Modal initial enter state (hidden, scaled down) */
.modal-enter {
    opacity: 0;
    transform: scale(0.95);
    /* Start slightly smaller */
    /* Smooth transition */
}

/* Modal enter active state (fully visible) */
.modal-enter-active {
    opacity: 1;
    transform: scale(1);
    transition: opacity 0.5s ease, transform 0.5s ease;
    /* End at full size */
}

/* Modal exit initial state (visible) */
.modal-exit {
    opacity: 1;
    transform: scale(1);
    /* Start fully visible */
    /* Smooth transition */
}

/* Modal exit active state (fading and shrinking) */
.modal-exit-active {
    opacity: 0;
    transform: scale(0.95);
    transition: opacity 0.5s ease, transform 0.5s ease;
    /* Shrink and fade out */
}

/* Background/overlay transition */
.modal-backdrop {
    opacity: 0;
    transition: opacity 0.5s ease;
    /* Smooth transition */
}

.modal-backdrop-active {
    opacity: 1;
    /* Full opacity for background */
}

/* styles.css */
code[class*="language-"],
pre[class*="language-"] {
    color: #f8f8f2;
    /* Light text color */
    background: #282a36;
    /* Dark background */
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
    color: #6272a4;
    /* Comments */
}

.token.punctuation {
    color: #f8f8f2;
    /* Punctuation */
}

.token.property,
.token.tag,
.token.constant,
.token.symbol {
    color: #ff79c6;
    /* Tags and properties */
}

.token.selector,
.token.attr-name {
    color: #50fa7b;
    /* Attributes */
}

.token.string,
.token.char,
.token.builtin,
.token.inserted {
    color: #f1fa8c;
    /* Strings */
}

.token.number {
    color: #bd93f9;
    /* Numbers */
}

.token.operator,
.token.variable {
    color: #ffb86c;
    /* Operators and variables */
}

.token.function,
.token.class-name {
    color: #66d9ef;
    /* Functions and classes */
}

.token.keyword {
    color: #ff79c6;
    /* Keywords */
}